{"abi":[{"type":"fallback","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":"Proxy"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":{"keccak256":"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd","urls":["bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac","dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol","id":43547,"exportedSymbols":{"Proxy":[43546]},"nodeType":"SourceUnit","src":"99:2571:20","nodes":[{"id":43512,"nodeType":"PragmaDirective","src":"99:24:20","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":43546,"nodeType":"ContractDefinition","src":"724:1945:20","nodes":[{"id":43521,"nodeType":"FunctionDefinition","src":"949:895:20","nodes":[],"body":{"id":43520,"nodeType":"Block","src":"1009:835:20","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1028:810:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1281:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1284:1:20","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1287:12:20"},"nodeType":"YulFunctionCall","src":"1287:14:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1268:12:20"},"nodeType":"YulFunctionCall","src":"1268:34:20"},"nodeType":"YulExpressionStatement","src":"1268:34:20"},{"nodeType":"YulVariableDeclaration","src":"1429:74:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1456:3:20"},"nodeType":"YulFunctionCall","src":"1456:5:20"},{"name":"implementation","nodeType":"YulIdentifier","src":"1463:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"1479:1:20","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1482:12:20"},"nodeType":"YulFunctionCall","src":"1482:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"1498:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1501:1:20","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1443:12:20"},"nodeType":"YulFunctionCall","src":"1443:60:20"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1433:6:20","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1571:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1574:1:20","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1577:14:20"},"nodeType":"YulFunctionCall","src":"1577:16:20"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1556:14:20"},"nodeType":"YulFunctionCall","src":"1556:38:20"},"nodeType":"YulExpressionStatement","src":"1556:38:20"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1689:59:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1714:1:20","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1717:14:20"},"nodeType":"YulFunctionCall","src":"1717:16:20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:20"},"nodeType":"YulFunctionCall","src":"1707:27:20"},"nodeType":"YulExpressionStatement","src":"1707:27:20"}]},"nodeType":"YulCase","src":"1682:66:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1687:1:20","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1769:59:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:20","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1797:14:20"},"nodeType":"YulFunctionCall","src":"1797:16:20"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1787:6:20"},"nodeType":"YulFunctionCall","src":"1787:27:20"},"nodeType":"YulExpressionStatement","src":"1787:27:20"}]},"nodeType":"YulCase","src":"1761:67:20","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1615:6:20"},"nodeType":"YulSwitch","src":"1608:220:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":43516,"isOffset":false,"isSlot":false,"src":"1463:14:20","valueSize":1}],"id":43519,"nodeType":"InlineAssembly","src":"1019:819:20"}]},"documentation":{"id":43514,"nodeType":"StructuredDocumentation","src":"754:190:20","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:20","parameters":{"id":43517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43516,"mutability":"mutable","name":"implementation","nameLocation":"976:14:20","nodeType":"VariableDeclaration","scope":43521,"src":"968:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43515,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:20"},"returnParameters":{"id":43518,"nodeType":"ParameterList","parameters":[],"src":"1009:0:20"},"scope":43546,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43527,"nodeType":"FunctionDefinition","src":"2028:67:20","nodes":[],"documentation":{"id":43522,"nodeType":"StructuredDocumentation","src":"1850:173:20","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:20","parameters":{"id":43523,"nodeType":"ParameterList","parameters":[],"src":"2052:2:20"},"returnParameters":{"id":43526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43527,"src":"2086:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43524,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:20"},"scope":43546,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":43537,"nodeType":"FunctionDefinition","src":"2323:83:20","nodes":[],"body":{"id":43536,"nodeType":"Block","src":"2361:45:20","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":43532,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43527,"src":"2381:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":43533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":43531,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43521,"src":"2371:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":43534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43535,"nodeType":"ExpressionStatement","src":"2371:28:20"}]},"documentation":{"id":43528,"nodeType":"StructuredDocumentation","src":"2101:217:20","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:20","parameters":{"id":43529,"nodeType":"ParameterList","parameters":[],"src":"2341:2:20"},"returnParameters":{"id":43530,"nodeType":"ParameterList","parameters":[],"src":"2361:0:20"},"scope":43546,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43545,"nodeType":"FunctionDefinition","src":"2603:64:20","nodes":[],"body":{"id":43544,"nodeType":"Block","src":"2639:28:20","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43541,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43537,"src":"2649:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":43542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43543,"nodeType":"ExpressionStatement","src":"2649:11:20"}]},"documentation":{"id":43538,"nodeType":"StructuredDocumentation","src":"2412:186:20","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":43539,"nodeType":"ParameterList","parameters":[],"src":"2611:2:20"},"returnParameters":{"id":43540,"nodeType":"ParameterList","parameters":[],"src":"2639:0:20"},"scope":43546,"stateMutability":"payable","virtual":true,"visibility":"external"}],"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":43513,"nodeType":"StructuredDocumentation","src":"125:598:20","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"linearizedBaseContracts":[43546],"name":"Proxy","nameLocation":"742:5:20","scope":43547,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":20}